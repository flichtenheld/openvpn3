name: Build

on: [push, pull_request]

jobs:
  msvc:
    strategy:
      matrix:
        arch: [x86, amd64, amd64_arm64]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      BUILD_CONFIGURATION: Release
      buildDir: '${{ github.workspace }}/build'

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: lukka/get-cmake@latest
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: '36fb23307e10cc6ffcec566c46c4bb3f567c82c6'
        appendedCacheKey: ${{ matrix.arch }}-${{ hashFiles( '**/vcpkg.json' ) }}

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@v3
      env:
        VCPKG_OVERLAY_PORTS: '${{ github.workspace }}/deps/vcpkg-ports'
      with:
        useVcpkgToolchainFile: true
        buildDirectory: '${{ env.buildDir }}'
        buildWithCMake: true
        cmakeAppendedArgs: '-DCLI_OVPNDCOWIN=ON'
        cmakeBuildType: ${{env.BUILD_CONFIGURATION}}

    - uses: actions/upload-artifact@v2
      with:
        name: openvpn3-${{ matrix.arch }}
        path: |
            ${{ env.buildDir }}/**/*.exe
            ${{ env.buildDir }}/**/*.dll
            !${{ env.buildDir }}/test/ssl/**
            !${{ env.buildDir }}/test/unittests/**
            !${{ env.buildDir }}/CMakeFiles/**
            !${{ env.buildDir }}/vcpkg_installed/**
